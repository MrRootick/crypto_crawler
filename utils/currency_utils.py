from enums.currency_pair import CURRENCY_PAIR
from enums.currency import CURRENCY
from enums.exchange import EXCHANGE

from bittrex.currency_utils import get_currency_name_for_bittrex
from kraken.currency_utils import get_currency_name_for_kraken
from poloniex.currency_utils import get_currency_name_for_poloniex
from binance.currency_utils import get_currency_name_for_binance



def split_currency_pairs(pair_id):
    return {
        CURRENCY_PAIR.BTC_TO_DASH: (CURRENCY.BITCOIN, CURRENCY.DASH),
        CURRENCY_PAIR.BTC_TO_ETH: (CURRENCY.BITCOIN, CURRENCY.ETH),
        CURRENCY_PAIR.BTC_TO_LTC: (CURRENCY.BITCOIN, CURRENCY.LTC),
        CURRENCY_PAIR.BTC_TO_XRP: (CURRENCY.BITCOIN, CURRENCY.XRP),
        CURRENCY_PAIR.BTC_TO_BCC: (CURRENCY.BITCOIN, CURRENCY.BCC),
        CURRENCY_PAIR.BTC_TO_ETC: (CURRENCY.BITCOIN, CURRENCY.ETC),
        CURRENCY_PAIR.BTC_TO_SC: (CURRENCY.BITCOIN, CURRENCY.SC),
        CURRENCY_PAIR.BTC_TO_DGB: (CURRENCY.BITCOIN, CURRENCY.DGB),
        CURRENCY_PAIR.BTC_TO_XEM: (CURRENCY.BITCOIN, CURRENCY.XEM),
        CURRENCY_PAIR.BTC_TO_ARDR: (CURRENCY.BITCOIN, CURRENCY.ARDR),
        CURRENCY_PAIR.BTC_TO_OMG: (CURRENCY.BITCOIN, CURRENCY.OMG),
        CURRENCY_PAIR.BTC_TO_ZEC: (CURRENCY.BITCOIN, CURRENCY.ZEC),
        CURRENCY_PAIR.BTC_TO_REP: (CURRENCY.BITCOIN, CURRENCY.REP),
        CURRENCY_PAIR.BTC_TO_XMR: (CURRENCY.BITCOIN, CURRENCY.XMR),
        CURRENCY_PAIR.BTC_TO_DOGE: (CURRENCY.BITCOIN, CURRENCY.DOGE),
        CURRENCY_PAIR.BTC_TO_DCR: (CURRENCY.BITCOIN, CURRENCY.DCR),
        CURRENCY_PAIR.ETH_TO_DASH: (CURRENCY.ETH, CURRENCY.DASH),
        CURRENCY_PAIR.ETH_TO_LTC: (CURRENCY.ETH, CURRENCY.LTC),
        CURRENCY_PAIR.ETH_TO_XRP: (CURRENCY.ETH, CURRENCY.XRP),
        CURRENCY_PAIR.ETH_TO_BCC: (CURRENCY.ETH, CURRENCY.BCC),
        CURRENCY_PAIR.ETH_TO_ETC: (CURRENCY.ETH, CURRENCY.ETC),
        CURRENCY_PAIR.ETH_TO_SC: (CURRENCY.ETH, CURRENCY.SC),
        CURRENCY_PAIR.ETH_TO_DGB: (CURRENCY.ETH, CURRENCY.DGB),
        CURRENCY_PAIR.ETH_TO_XEM: (CURRENCY.ETH, CURRENCY.XEM),
        CURRENCY_PAIR.ETH_TO_OMG: (CURRENCY.ETH, CURRENCY.OMG),
        CURRENCY_PAIR.ETH_TO_ZEC: (CURRENCY.ETH, CURRENCY.ZEC),
        CURRENCY_PAIR.ETH_TO_REP: (CURRENCY.ETH, CURRENCY.REP),
        CURRENCY_PAIR.ETH_TO_XMR: (CURRENCY.ETH, CURRENCY.XMR),
        CURRENCY_PAIR.USD_TO_DASH: (CURRENCY.USD, CURRENCY.DASH),
        CURRENCY_PAIR.USD_TO_BTC: (CURRENCY.USD, CURRENCY.BITCOIN),
        CURRENCY_PAIR.USD_TO_LTC: (CURRENCY.USD, CURRENCY.LTC),
        CURRENCY_PAIR.USD_TO_XRP: (CURRENCY.USD, CURRENCY.XRP),
        CURRENCY_PAIR.USD_TO_BCC: (CURRENCY.USD, CURRENCY.BCC),
        CURRENCY_PAIR.USD_TO_ETC: (CURRENCY.USD, CURRENCY.ETC),
        CURRENCY_PAIR.USD_TO_ETH: (CURRENCY.USD, CURRENCY.ETH),
        CURRENCY_PAIR.USD_TO_ZEC: (CURRENCY.USD, CURRENCY.ZEC),
        CURRENCY_PAIR.USD_TO_REP: (CURRENCY.USD, CURRENCY.REP),
        CURRENCY_PAIR.USD_TO_XMR: (CURRENCY.USD, CURRENCY.XMR),
        CURRENCY_PAIR.USDT_TO_DASH: (CURRENCY.USDT, CURRENCY.DASH),
        CURRENCY_PAIR.USDT_TO_BTC: (CURRENCY.USDT, CURRENCY.BITCOIN),
        CURRENCY_PAIR.USDT_TO_LTC: (CURRENCY.USDT, CURRENCY.LTC),
        CURRENCY_PAIR.USDT_TO_XRP: (CURRENCY.USDT, CURRENCY.XRP),
        CURRENCY_PAIR.USDT_TO_BCC: (CURRENCY.USDT, CURRENCY.BCC),
        CURRENCY_PAIR.USDT_TO_ETC: (CURRENCY.USDT, CURRENCY.ETC),
        CURRENCY_PAIR.USDT_TO_ETH: (CURRENCY.USDT, CURRENCY.ETH),
        CURRENCY_PAIR.USDT_TO_ZEC: (CURRENCY.USDT, CURRENCY.ZEC),
        CURRENCY_PAIR.USDT_TO_REP: (CURRENCY.USDT, CURRENCY.REP),
        CURRENCY_PAIR.USDT_TO_XMR: (CURRENCY.USDT, CURRENCY.XMR),

    }[pair_id]


def get_pair_name_by_id(pair_id):
    return {
        CURRENCY_PAIR.BTC_TO_DASH: "BTC_TO_DASH",
        CURRENCY_PAIR.BTC_TO_ETH: "BTC_TO_ETH",
        CURRENCY_PAIR.BTC_TO_LTC: "BTC_TO_LTC",
        CURRENCY_PAIR.BTC_TO_XRP: "BTC_TO_XRP",
        CURRENCY_PAIR.BTC_TO_BCC: "BTC_TO_BCC",
        CURRENCY_PAIR.BTC_TO_ETC: "BTC_TO_ETC",
        CURRENCY_PAIR.BTC_TO_SC: "BTC_TO_SC",
        CURRENCY_PAIR.BTC_TO_DGB: "BTC_TO_DGB",
        CURRENCY_PAIR.BTC_TO_XEM: "BTC_TO_XEM",
        CURRENCY_PAIR.BTC_TO_ARDR: "BTC_TO_ARDR",
        CURRENCY_PAIR.BTC_TO_OMG: "BTC_TO_OMG",
        CURRENCY_PAIR.BTC_TO_ZEC: "BTC_TO_ZEC",
        CURRENCY_PAIR.BTC_TO_REP: "BTC_TO_REP",
        CURRENCY_PAIR.BTC_TO_XMR: "BTC_TO_XMR",
        CURRENCY_PAIR.BTC_TO_DOGE: "BTC_TO_DOGE",
        CURRENCY_PAIR.BTC_TO_DCR: "BTC_TO_DCR",
        CURRENCY_PAIR.ETH_TO_DASH: "ETH_TO_DASH",
        CURRENCY_PAIR.ETH_TO_LTC: "ETH_TO_LTC",
        CURRENCY_PAIR.ETH_TO_XRP: "ETH_TO_XRP",
        CURRENCY_PAIR.ETH_TO_BCC: "ETH_TO_BCC",
        CURRENCY_PAIR.ETH_TO_ETC: "ETH_TO_ETC",
        CURRENCY_PAIR.ETH_TO_SC: "ETH_TO_SC",
        CURRENCY_PAIR.ETH_TO_DGB: "ETH_TO_DGB",
        CURRENCY_PAIR.ETH_TO_XEM: "ETH_TO_XEM",
        CURRENCY_PAIR.ETH_TO_OMG: "ETH_TO_OMG",
        CURRENCY_PAIR.ETH_TO_ZEC: "ETH_TO_ZEC",
        CURRENCY_PAIR.ETH_TO_REP: "ETH_TO_REP",
        CURRENCY_PAIR.ETH_TO_XMR: "ETH_TO_XMR",
        CURRENCY_PAIR.USD_TO_DASH: "USD_TO_DASH",
        CURRENCY_PAIR.USD_TO_BTC: "USD_TO_BTC",
        CURRENCY_PAIR.USD_TO_LTC: "USD_TO_LTC",
        CURRENCY_PAIR.USD_TO_XRP: "USD_TO_XRP",
        CURRENCY_PAIR.USD_TO_BCC: "USD_TO_BCC",
        CURRENCY_PAIR.USD_TO_ETC: "USD_TO_ETC",
        CURRENCY_PAIR.USD_TO_ETH: "USD_TO_ETH",
        CURRENCY_PAIR.USD_TO_ZEC: "USD_TO_ZEC",
        CURRENCY_PAIR.USD_TO_REP: "USD_TO_REP",
        CURRENCY_PAIR.USD_TO_XMR: "USD_TO_XMR",
        CURRENCY_PAIR.USDT_TO_DASH: "USDT_TO_DASH",
        CURRENCY_PAIR.USDT_TO_BTC: "USDT_TO_BTC",
        CURRENCY_PAIR.USDT_TO_LTC: "USDT_TO_LTC",
        CURRENCY_PAIR.USDT_TO_XRP: "USDT_TO_XRP",
        CURRENCY_PAIR.USDT_TO_BCC: "USDT_TO_BCC",
        CURRENCY_PAIR.USDT_TO_ETC: "USDT_TO_ETC",
        CURRENCY_PAIR.USDT_TO_ETH: "USDT_TO_ETH",
        CURRENCY_PAIR.USDT_TO_ZEC: "USDT_TO_ZEC",
        CURRENCY_PAIR.USDT_TO_REP: "USDT_TO_REP",
        CURRENCY_PAIR.USDT_TO_XMR: "USDT_TO_XMR",
        CURRENCY_PAIR.USD_TO_USDT: "USD_TO_USDT",
    }[pair_id]


"""
    NOTE:   routine below is used only for balance retrieval
            supported currencies are
            ARBITRAGE_CURRENCY = [CURRENCY.DASH, CURRENCY.BCC, CURRENCY.XRP, CURRENCY.LTC, CURRENCY.ETC, CURRENCY.ETH]
"""


def get_currency_name_by_id(currency_id):
    return {
        CURRENCY.BITCOIN: 'BTC',
        CURRENCY.DASH: 'DASH',
        CURRENCY.BCC: 'BCH',
        CURRENCY.XRP: 'XRP',
        CURRENCY.LTC: 'LTC',
        CURRENCY.ETC: 'ETC',
        CURRENCY.ETH: 'ETH',
        CURRENCY.SC: 'SC',
        CURRENCY.DGB: 'DGB',
        CURRENCY.XEM: 'XEM',
        CURRENCY.ARDR: 'ARDR',
        CURRENCY.OMG: 'OMG',
        CURRENCY.ZEC: 'ZEC',
        CURRENCY.REP: 'REP',
        CURRENCY.XMR: 'XMR',
        CURRENCY.DOGE: 'DOGE',
        CURRENCY.DCR: 'DCR',
        CURRENCY.USD: 'USD',
        CURRENCY.USDT: 'USDT'
    }[currency_id]


def get_currency_name_by_exchange_id(pair_id, exchange_id):
    return {
        EXCHANGE.BITTREX: get_currency_name_for_bittrex(pair_id),
        EXCHANGE.KRAKEN: get_currency_name_for_kraken(pair_id),
        EXCHANGE.POLONIEX: get_currency_name_for_poloniex(pair_id),
        EXCHANGE.BINANCE: get_currency_name_for_binance(pair_id),
    }[exchange_id]